version: '3.8'
services:
  postgres:
    container_name: pg
    image: postgres:alpine3.16
    restart: always
    env_file: .env
    environment:
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_DB: $DB_DATABASE
    volumes:
      - pg:/data/db
    ports:
      - "5432:${DB_PORT}"
    networks:
      - node-network

  backend:
    container_name: backend
    image: backend
    build:
      context: .
    restart: always
    env_file: .env
    depends_on:
      - postgres
    links:
      - postgres
      - redis
    ports:
      - "3000:${PORT}"
    networks:
      - node-network

  redis:
    container_name: redis
    privileged: true
    image: redis:6.2.5-alpine
    ports:
      - "6379:6379"
    networks:
      - node-network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:6.10
    environment:
      PGADMIN_DEFAULT_EMAIL: 'test@gmail.com'
      PGADMIN_DEFAULT_PASSWORD: 'changeme'
    volumes:
      - pgadmin:/root/.pgadmin
    depends_on:
      - postgres
    ports:
      - "5050:80"
    networks:
      - node-network

  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:3.8
    networks:
      - node-network
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'

  kafka:
    container_name: kafka
    image: bitnami/kafka:3.2
    volumes:
      - kafka:/bitnami/kafka
    ports:
      - "9092:9092"
    environment:
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_CFG_ZOOKEEPER_CONNECT: 'zookeeper:2181'
    networks:
      - node-network
    depends_on:
      - zookeeper

volumes:
  pg:
  pgadmin:
  kafka:

networks:
  node-network:
    driver: bridge